{
	"name": "DW_WWI",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Integration_DIM_Cities",
						"type": "DatasetReference"
					},
					"name": "ItgCities"
				},
				{
					"dataset": {
						"referenceName": "Integration_DIM_Customers",
						"type": "DatasetReference"
					},
					"name": "ItgCustomers"
				},
				{
					"dataset": {
						"referenceName": "Integration_DIM_StockItems",
						"type": "DatasetReference"
					},
					"name": "ItgStockItems"
				},
				{
					"dataset": {
						"referenceName": "Integration_Fact_Orders",
						"type": "DatasetReference"
					},
					"name": "ItgOrders"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DW_Dim_Cities",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DW_Dim_Customers",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "DW_Dim_StockItems",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "DW_Fact_Orders",
						"type": "DatasetReference"
					},
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "Filter2"
				},
				{
					"name": "Filter3"
				}
			],
			"script": "source(output(\n\t\tCityID as integer,\n\t\tCityName as string,\n\t\tLocation as binary,\n\t\tLatestRecordedPopulation as long,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tCurrentFlag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ItgCities\nsource(output(\n\t\tCustomerID as integer,\n\t\tCustomerName as string,\n\t\tBillToCustomer as string,\n\t\tPrimaryContactPerson as string,\n\t\tPostalCityID as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tCurrentFlag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ItgCustomers\nsource(output(\n\t\tStockItemID as integer,\n\t\tStockItemName as string,\n\t\tSupplierID as integer,\n\t\tColorID as integer,\n\t\tUnitPackageID as integer,\n\t\tOuterPackageID as integer,\n\t\tBrand as string,\n\t\tSize as string,\n\t\tLeadTimeDays as integer,\n\t\tQuantityPerOuter as integer,\n\t\tIsChillerStock as boolean,\n\t\tBarcode as string,\n\t\tTaxRate as decimal(18,3),\n\t\tUnitPrice as decimal(18,2),\n\t\tRecommendedRetailPrice as decimal(18,2),\n\t\tTypicalWeightPerUnit as decimal(18,3),\n\t\tMarketingComments as string,\n\t\tInternalComments as string,\n\t\tPhoto as binary,\n\t\tCustomFields as string,\n\t\tTags as string,\n\t\tSearchDetails as string,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tCurrentFlag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ItgStockItems\nsource(output(\n\t\tOrderID as integer,\n\t\tCityID as integer,\n\t\tCustomerID as integer,\n\t\tStockItemID as integer,\n\t\tOrderDate as date,\n\t\tPickingDate as timestamp,\n\t\tBackorderOrderID as integer,\n\t\tDescription as string,\n\t\tQuantity as integer,\n\t\tUnitPrice as decimal(18,2),\n\t\tTaxRate as decimal(18,3),\n\t\tTotalExcludingTax as decimal(18,3),\n\t\tTaxAmount as decimal(18,3),\n\t\tTotalIncludingTax as decimal(18,3)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ItgOrders\nItgCities filter(CurrentFlag == 1) ~> Filter1\nItgCustomers filter(CurrentFlag == 1) ~> Filter2\nItgStockItems filter(CurrentFlag == 1) ~> Filter3\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{City Key} as integer,\n\t\t{WWI City ID} as integer,\n\t\tCity as string,\n\t\t{State Province} as string,\n\t\tCountry as string,\n\t\tContinent as string,\n\t\t{Sales Territory} as string,\n\t\tRegion as string,\n\t\tSubregion as string,\n\t\tLocation as binary,\n\t\t{Latest Recorded Population} as long,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['WWI City ID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI City ID} = CityID,\n\t\tCity = CityName,\n\t\tLocation,\n\t\t{Latest Recorded Population} = LatestRecordedPopulation,\n\t\t{Valid From} = ValidFrom,\n\t\t{Valid To} = ValidTo\n\t)) ~> sink1\nFilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['WWI Customer ID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Customer ID} = CustomerID,\n\t\tCustomer = CustomerName,\n\t\t{Bill To Customer} = BillToCustomer,\n\t\t{Primary Contact} = PrimaryContactPerson,\n\t\t{Valid From} = ValidFrom,\n\t\t{Valid To} = ValidTo\n\t)) ~> sink2\nFilter3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Stock Item Key} as integer,\n\t\t{WWI Stock Item ID} as integer,\n\t\t{Stock Item} as string,\n\t\tColor as string,\n\t\t{Selling Package} as string,\n\t\t{Buying Package} as string,\n\t\tBrand as string,\n\t\tSize as string,\n\t\t{Lead Time Days} as integer,\n\t\t{Quantity Per Outer} as integer,\n\t\t{Is Chiller Stock} as boolean,\n\t\tBarcode as string,\n\t\t{Tax Rate} as decimal(18,3),\n\t\t{Unit Price} as decimal(18,2),\n\t\t{Recommended Retail Price} as decimal(18,2),\n\t\t{Typical Weight Per Unit} as decimal(18,3),\n\t\tPhoto as binary,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['StockItemID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Stock Item ID} = StockItemID,\n\t\t{Stock Item} = StockItemName,\n\t\tBrand,\n\t\tSize,\n\t\t{Lead Time Days} = LeadTimeDays,\n\t\t{Quantity Per Outer} = QuantityPerOuter,\n\t\t{Is Chiller Stock} = IsChillerStock,\n\t\tBarcode,\n\t\t{Tax Rate} = TaxRate,\n\t\t{Unit Price} = UnitPrice,\n\t\t{Recommended Retail Price} = RecommendedRetailPrice,\n\t\t{Typical Weight Per Unit} = TypicalWeightPerUnit,\n\t\tPhoto,\n\t\t{Valid From} = ValidFrom,\n\t\t{Valid To} = ValidTo\n\t)) ~> sink3\nItgOrders sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Order Key} as long,\n\t\t{City Key} as integer,\n\t\t{Customer Key} as integer,\n\t\t{Stock Item Key} as integer,\n\t\t{Order Date Key} as date,\n\t\t{Picked Date Key} as date,\n\t\t{Salesperson Key} as integer,\n\t\t{Picker Key} as integer,\n\t\t{WWI Order ID} as integer,\n\t\t{WWI Backorder ID} as integer,\n\t\tDescription as string,\n\t\tPackage as string,\n\t\tQuantity as integer,\n\t\t{Unit Price} as decimal(18,2),\n\t\t{Tax Rate} as decimal(18,3),\n\t\t{Total Excluding Tax} as decimal(18,2),\n\t\t{Tax Amount} as decimal(18,2),\n\t\t{Total Including Tax} as decimal(18,2),\n\t\t{Lineage Key} as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['OrderID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Order ID} = OrderID,\n\t\t{City Key} = CityID,\n\t\t{Customer Key} = CustomerID,\n\t\t{Stock Item Key} = StockItemID,\n\t\t{Order Date Key} = OrderDate,\n\t\t{WWI Backorder ID} = BackorderOrderID,\n\t\tDescription,\n\t\tQuantity,\n\t\t{Unit Price} = UnitPrice,\n\t\t{Tax Rate} = TaxRate,\n\t\t{Total Excluding Tax} = TotalExcludingTax,\n\t\t{Tax Amount} = TaxAmount,\n\t\t{Total Including Tax} = TotalIncludingTax\n\t)) ~> sink4"
		}
	}
}